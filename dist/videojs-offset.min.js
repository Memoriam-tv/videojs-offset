/*! @name videojs-offset @version 2.1.2 @license MIT */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("video.js")):"function"==typeof define&&define.amd?define(["video.js"],e):(t=t||self).videojsOffset=e(t.videojs)}(this,function(t){"use strict";t=t&&t.hasOwnProperty("default")?t.default:t;var e={},i=t.registerPlugin||t.plugin,s=function t(){var e=this,i=this.currentTime();i<0&&(this.currentTime(0),this.play()),this._offsetEnd>0&&i>this._offsetEnd-this._offsetStart&&(this.pause(),this.trigger("ended"),this.one("play",function(){e.on("timeupdate",t)}),this._restartBeginning?(this.trigger("loadstart"),this.currentTime(0)):this.currentTime(this._offsetEnd-this._offsetStart))},r=function(i){var r=this;i=i||{};var o=this.constructor;this._offsetStart=parseFloat(i.start||"0"),this._offsetEnd=parseFloat(i.end||"0"),this._restartBeginning=i.restart_beginning||!1,this.duration=function(){return void 0!==this._offsetEnd&&void 0!==this._offsetStart?this._offsetEnd>0?this._offsetEnd-this._offsetStart:o.prototype.duration.apply(this,arguments)-this._offsetStart:o.prototype.duration.apply(this,arguments)},this.currentTime=function(t){return void 0!==t?o.prototype.currentTime.call(this,t+this._offsetStart)-this._offsetStart:o.prototype.currentTime.apply(this,arguments)-this._offsetStart},this.currentTime=function(t){return void 0!==t?void 0!==this._offsetStart?o.prototype.currentTime.call(this,t+this._offsetStart):o.prototype.currentTime.call(this,t):void 0!==this._offsetStart?o.prototype.currentTime.apply(this)-this._offsetStart:o.prototype.currentTime.apply(this)},this.remainingTime=function(){return this.duration()-this.currentTime()},this.startOffset=function(){return this._offsetStart},this.endOffset=function(){return this._offsetEnd>0?this._offsetEnd:this.duration()},this.buffered=function(){for(var e=o.prototype.buffered.call(this),i=[],s=0;s<e.length;s++)i[s]=[Math.max(0,e.start(s)-this._offsetStart),Math.min(Math.max(0,e.end(s)-this._offsetStart),this.duration())];return t.createTimeRanges(i)},this.disposeOffset=function(){r.off("timeupdate",s)},this.ready(function(){var o;o=r,t.mergeOptions(e,i),o.on("timeupdate",s)}),this.one("dispose",this.disposeOffset)};return console.log("trying to register the offset plugin"),i("offset",r),r.VERSION="2.1.2",r});
